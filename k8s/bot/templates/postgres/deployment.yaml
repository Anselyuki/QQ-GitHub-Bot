apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bot.name" . }}-postgres
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "bot.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "bot.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bot.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-postgres
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.postgres.image.repo }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.bot.config.postgresUser | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.bot.config.postgresPassword | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.bot.config.postgresDatabase | quote }}
            - name: POSTGRES_INITDB_ARGS
              value: "--encoding=UTF8"
            - name: TZ
              value: Asia/Shanghai
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "bot.name" . }}-postgres-pvc
